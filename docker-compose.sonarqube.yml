version: "3"

services:
  sonarqube:
    image: sonarqube
    restart: unless-stopped
    expose:
      - 9000
    ports:
      - "127.0.0.1:9000:9000"
    networks:
      - sonarnet
    environment:
      - sonar.jdbc.username=sonar
      - sonar.jdbc.password=sonar
      - sonar.jdbc.url=jdbc:postgresql://db:5432/sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    depends_on:
      - db

  db:
    image: postgres:12-alpine
    networks:
      - sonarnet
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - sonarqube_db:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

  sonar-scanner:
    build:
      context: .
      dockerfile: Dockerfile.sonar
    networks:
      - sonarnet
    depends_on:
      - sonarqube
    environment:
      - SONAR_HOST_URL=http://sonarqube:9000
      - SONAR_PROJECT_KEY=your_password
      - SONAR_PROJECT_NAME=your_project_name
      - SONAR_PROJECT_VERSION=0.1
      - SONAR_PROJECT_SOURCE=/usr/src/
      - SONAR_PROJECT_BASE_DIR=/usr/src/
      - SONAR_SCM_PROVIDER=git
      - SONAR_PROJECT_LANGUAGE=py
      - SONAR_SOURCE_ENCODING=UTF-8

networks:
  sonarnet:

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
  sonarqube_db:
  postgresql_data: